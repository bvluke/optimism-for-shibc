Purpose: Deploy Shiba Classic L2 with id 66886687 of Sepolia testnet on Ubuntu PC 20.04 or 22.04 (at least 4cpu, 8gb ram, 1TB storage)
Please refer to https://stack.optimism.io/docs/build/getting-started/#

A. Prepare
1. Testnet will be L2 of Sepolia Ethereum, so please get some ETH on Sepolia at https://faucet.quicknode.com/ethereum/sepolia & https://www.infura.io/faucet/sepolia

2. Prepare 4 addresses: Admin, Batcher, Proposer, Sequencer ( Using Metamask, address & private key)
Admin — 0.2 ETH
Proposer — 0.2 ETH
Batcher — 0.1 ETH
WARNING: Batcher & proposer will write to L1 every 5 minutes, so you have to prepare enough eth for mainnet

3. Pull source code
+ You must allocate source code at home folder, go to home using command "cd ~"
+ git@github.com:bvluke/optimism-for-shibc.git and then rename folder to "optimism" (for using commands easily)
+ git@github.com:bvluke/op-geth.git
+ git@github.com:bvluke/blockscout-for-shibc.git

4. Go to "optimism" and put addresses infomation to "optimism/.envrc.example", and rename to ".envrc"

5. Install all dependencies library & build code modules refer to https://stack.optimism.io/docs/build/getting-started/# , from the beginning to section "Load Environment variables
"

6. Plz check all dependencies by
cd ~/optimism
cd packages/contracts-bedrock
./scripts/shiba-classic-testnet/versions.sh

6. After all, plz refer to bellow sections to start the network


***********************************************************************
B. Start network
1. Configure Network

cd ~/optimism

cd packages/contracts-bedrock

./scripts/shiba-classic-testnet/config.sh
-------------------------------

2. Deploy the L1 contracts

direnv allow

forge script scripts/Deploy.s.sol:Deploy --private-key $GS_ADMIN_PRIVATE_KEY --broadcast --rpc-url $L1_RPC_URL

forge script scripts/Deploy.s.sol:Deploy --sig 'sync()' --rpc-url $L1_RPC_URL

-----------------------------
3. Generate the L2 config files

cd ~/optimism/op-node


go run cmd/main.go genesis l2 \
    --deploy-config ../packages/contracts-bedrock/deploy-config/shiba-classic-testnet.json \
    --deployment-dir ../packages/contracts-bedrock/deployments/shiba-classic-testnet/ \
    --outfile.l2 genesis.json \
    --outfile.rollup rollup.json \
    --l1-rpc $L1_RPC_URL


openssl rand -hex 32 > jwt.txt

cp genesis.json ~/op-geth
cp jwt.txt ~/op-geth

-------------------------------------
4. Initialize op-geth

cd ~/op-geth
mkdir datadir
build/bin/geth init --datadir=datadir genesis.json

-------------------------------------
5. Start op-geth (in new command window)

cd ~/op-geth

./build/bin/geth \
    --datadir ./datadir \
    --http \
    --http.corsdomain="*" \
    --http.vhosts="*" \
    --http.addr=0.0.0.0 \
    --http.api=web3,debug,eth,txpool,net,engine \
    --ws \
    --ws.addr=0.0.0.0 \
    --ws.port=8546 \
    --ws.origins="*" \
    --ws.api=debug,eth,txpool,net,engine \
    --syncmode=full \
    --gcmode=archive \
    --nodiscover \
    --maxpeers=0 \
    --networkid=66886687 \
    --authrpc.vhosts="*" \
    --authrpc.addr=0.0.0.0 \
    --authrpc.port=8551 \
    --authrpc.jwtsecret=./jwt.txt \
    --rollup.disabletxpoolgossip=true

--------------------------------------
6. Start op-node (in new command window)

cd ~/optimism/op-node

./bin/op-node \
	--l2=http://localhost:8551 \
	--l2.jwt-secret=./jwt.txt \
	--sequencer.enabled \
	--sequencer.l1-confs=5 \
	--verifier.l1-confs=4 \
	--rollup.config=./rollup.json \
	--rpc.addr=0.0.0.0 \
	--rpc.port=8547 \
	--p2p.disable \
	--rpc.enable-admin \
	--p2p.sequencer.key=$GS_SEQUENCER_PRIVATE_KEY \
	--l1=$L1_RPC_URL \
	--l1.rpckind=$L1_RPC_KIND

----------------------------------
7. Start op-batcher (in new command window)

cd ~/optimism/op-batcher

./bin/op-batcher \
    --l2-eth-rpc=http://localhost:8545 \
    --rollup-rpc=http://localhost:8547 \
    --poll-interval=1s \
    --sub-safety-margin=6 \
    --num-confirmations=1 \
    --safe-abort-nonce-too-low-count=3 \
    --resubmission-timeout=30s \
    --rpc.addr=0.0.0.0 \
    --rpc.port=8548 \
    --rpc.enable-admin \
    --max-channel-duration=25 \
    --l1-eth-rpc=$L1_RPC_URL \
    --private-key=$GS_BATCHER_PRIVATE_KEY

------------------------------------------
9. Start op-proposer (in new command window)

cd ~/optimism/op-proposer

./bin/op-proposer \
    --poll-interval=12s \
    --rpc.port=8560 \
    --rollup-rpc=http://localhost:8547 \
    --l2oo-address=$(cat ../packages/contracts-bedrock/deployments/shiba-classic-testnet/L2OutputOracleProxy.json | jq -r .address) \
    --private-key=$GS_PROPOSER_PRIVATE_KEY \
    --l1-eth-rpc=$L1_RPC_URL


10. Now you have a network with RPC at http://localhost:8545, id 66886687

************************************************************************************************************
C. BLOCKSCOUT

Please using blockscout downloaded above and refer to https://stack.optimism.io/docs/build/explorer/#installation-and-configuration

